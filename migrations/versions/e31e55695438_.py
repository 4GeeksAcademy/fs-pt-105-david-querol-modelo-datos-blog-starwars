"""empty message

Revision ID: e31e55695438
Revises: c21cff0ff707
Create Date: 2025-08-10 08:40:52.168212

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e31e55695438'
down_revision = 'c21cff0ff707'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('starship',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('model', sa.String(length=50), nullable=True),
    sa.Column('manufacturer', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('character', schema=None) as batch_op:
        batch_op.add_column(sa.Column('gender', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('skin_color', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('hair_color', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('eye_color', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('mass', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('birth_year', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('description', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('created', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('edited', sa.String(length=50), nullable=False))
        batch_op.alter_column('homeworld',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.drop_column('species')

    with op.batch_alter_table('favorite', schema=None) as batch_op:
        batch_op.add_column(sa.Column('starship_id', sa.Integer(), nullable=False))
        batch_op.create_unique_constraint(None, ['chraracter_id'])
        batch_op.create_unique_constraint(None, ['planet_id'])
        batch_op.create_unique_constraint(None, ['starship_id'])
        batch_op.create_unique_constraint(None, ['user_id'])
        batch_op.create_foreign_key(None, 'starship', ['starship_id'], ['id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('last_name', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('date_of_suscription', sa.String(length=50), nullable=False))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('date_of_suscription')
        batch_op.drop_column('last_name')
        batch_op.drop_column('name')

    with op.batch_alter_table('favorite', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('starship_id')

    with op.batch_alter_table('character', schema=None) as batch_op:
        batch_op.add_column(sa.Column('species', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.alter_column('homeworld',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.drop_column('edited')
        batch_op.drop_column('created')
        batch_op.drop_column('description')
        batch_op.drop_column('birth_year')
        batch_op.drop_column('mass')
        batch_op.drop_column('eye_color')
        batch_op.drop_column('hair_color')
        batch_op.drop_column('skin_color')
        batch_op.drop_column('gender')

    op.drop_table('starship')
    # ### end Alembic commands ###
